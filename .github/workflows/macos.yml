name: macOS

on:
  - push

env:
  INSTALL_DIR: /usr/local/acts
  XERCESC_VERSION: 3.2.2
  ROOT_VERSION: 6.20.00
  GEANT4_VERSION: 10.6.1
  DD4HEP_VERSION: 01-11-02
  BOOST_VERSION: 1.72.0
  TBB_VERSION: 2020.2 
  HEPMC_VERSION: 3.2.1
  HEPPDT_VERSION: 2.06.01
  PYTHIA8_VERSION: 244

jobs:
  build_boost:
    runs-on: macos-10.15

    steps:
      - run: sudo mkdir ${INSTALL_DIR} && sudo chown $USER ${INSTALL_DIR}
      - name: Build
        run: >
          curl -SL https://dl.bintray.com/boostorg/release/${BOOST_VERSION}/source/boost_${BOOST_VERSION//./_}.tar.gz | tar -xzC .
          && mv boost_* boost_src && cd boost_src
          && ./bootstrap.sh 
          --with-libraries=program_options,test
          --prefix=${INSTALL_DIR}
          && ./b2 install
          && tar czf ../boost.tar.gz -C ${INSTALL_DIR} .
      - uses: actions/upload-artifact@v1
        with:
          name: boost
          path: boost.tar.gz

  build_tbb:
    runs-on: ubuntu-latest # we don't actually need macOS here
    steps:
      - name: Download
        run: >
          curl -SL https://github.com/oneapi-src/oneTBB/releases/download/v${TBB_VERSION}/tbb-${TBB_VERSION}-mac.tgz | tar -xzC .
          && rm tbb/README
          && tar czf tbb.tar.gz -C tbb .
      - uses: actions/upload-artifact@v1
        with:
          name: tbb
          path: tbb.tar.gz


  build_xercesc:
    runs-on: macos-10.15
    steps:
      - name: Install dependencies
        run: brew install cmake

      - run: sudo mkdir ${INSTALL_DIR} && sudo chown $USER ${INSTALL_DIR}

      - name: Build
        run: >
          curl -SL https://github.com/apache/xerces-c/archive/v${XERCESC_VERSION}.tar.gz | tar -xzC . 
          && mv xerces-c-* xerces-c_src
          && mkdir xerces-c_build && cd xerces-c_build
          && cmake ../xerces-c_src
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
          && make -j2
          && make install 
          && tar czf ../xercesc.tar.gz -C ${INSTALL_DIR} .
      - uses: actions/upload-artifact@v1
        with:
          name: xercesc
          path: xercesc.tar.gz

  build_root:
    runs-on: macos-10.15
    needs:
      - build_tbb
    steps:
      - name: Install dependencies
        run: brew install cmake

      - uses: actions/download-artifact@v1
        with:
          name: tbb
          path: .

      - run: >
          sudo mkdir ${INSTALL_DIR} && sudo chown -R $USER ${INSTALL_DIR}
          && tar xf tbb.tar.gz -C $INSTALL_DIR

      - name: Build
        run: >
          curl -SL https://root.cern/download/root_v${ROOT_VERSION}.source.tar.gz | tar -xzC . 
          && mv root-* root_src 
          && mkdir root_build && cd root_build 
          && cmake ../root_src 
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_CXX_STANDARD=17 
          -DCMAKE_PREFIX_PATH=${INSTALL_DIR}
          -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
          -Dx11=ON 
          -Dfftw3=ON 
          -Dgdml=ON 
          -Dminuit2=ON 
          -Dopengl=ON 
          -Droofit=ON 
          -Dxml=ON 
          && make -j2
          && make install 
          && tar czf ../root.tar.gz -C ${INSTALL_DIR} .

      - uses: actions/upload-artifact@v1
        with:
          name: root
          path: root.tar.gz

  build_geant4:
    runs-on: macos-10.15
    needs:
      - build_xercesc
    steps:
      - name: Install dependencies
        run: brew install cmake

      - uses: actions/download-artifact@v1
        with:
          name: xercesc
          path: .

      - run: >
          sudo mkdir ${INSTALL_DIR} && sudo chown $USER ${INSTALL_DIR}
          && tar xf xercesc.tar.gz -C ${INSTALL_DIR}
                        
      - name: Build Geant4
        run: >
          curl -SL https://github.com/Geant4/geant4/archive/v${GEANT4_VERSION}.tar.gz | tar -xzC .
          && mv geant4-* geant4_src
          && mkdir geant4_build && cd geant4_build
          && cmake ../geant4_src
          -DCMAKE_BUILD_TYPE=Release
          -DGEANT4_USE_GDML=ON
          -DGEANT4_BUILD_CXXSTD=17
          -DCMAKE_PREFIX_PATH=${INSTALL_DIR}
          -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
          && make -j2
          && make install
          && tar czf ../geant4.tar.gz -C ${INSTALL_DIR} .

      - uses: actions/upload-artifact@v1
        with:
          name: geant4
          path: geant4.tar.gz

  build_dd4hep:
    runs-on: macos-10.15
    needs:
      - build_geant4
      - build_root
      - build_xercesc
    steps:
      - name: Install dependencies
        run: brew install cmake

      - uses: actions/download-artifact@v1
        with:
          name: xercesc
          path: .
      - uses: actions/download-artifact@v1
        with:
          name: root
          path: .
      - uses: actions/download-artifact@v1
        with:
          name: geant4
          path: .
      - uses: actions/download-artifact@v1
        with:
          name: boost
          path: .

      - run: >
          sudo mkdir ${INSTALL_DIR} && sudo chown $USER ${INSTALL_DIR}
          && tar xf xercesc.tar.gz -C ${INSTALL_DIR}
          && tar xf root.tar.gz -C ${INSTALL_DIR}
          && tar xf geant4.tar.gz -C ${INSTALL_DIR}
          && tar xf boost.tar.gz -C ${INSTALL_DIR}

      - name: Build DD4hep
        run: >
          curl -SL https://github.com/AIDASoft/DD4hep/archive/v${DD4HEP_VERSION}.tar.gz | tar -xzC .
          && mv DD4hep-* dd4hep_src
          && mkdir dd4hep_build && cd dd4hep_build
          && cmake ../dd4hep_src
          -DCMAKE_BUILD_TYPE=Release
          -DDD4HEP_USE_GEANT4=ON
          -DCMAKE_CXX_STANDARD=17
          -DCMAKE_PREFIX_PATH=${INSTALL_DIR}
          -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
          -DBUILD_DOCS=OFF
          && make -j2
          && make install
          && tar czf ../dd4hep.tar.gz -C ${INSTALL_DIR} .

      - uses: actions/upload-artifact@v1
        with:
          name: dd4hep
          path: dd4hep.tar.gz

  build_hepmc3:
    runs-on: macos-10.15
    needs:
      - build_root
    steps:
      - name: Install dependencies
        run: brew install cmake

      - uses: actions/download-artifact@v1
        with:
          name: root
          path: .

      - run: >
          sudo mkdir ${INSTALL_DIR} && sudo chown $USER ${INSTALL_DIR}
          && tar xf root.tar.gz -C ${INSTALL_DIR}

      - name: Build
        run: >
          curl -SL https://gitlab.cern.ch/hepmc/HepMC3/-/archive/${HEPMC_VERSION}/HepMC3-${HEPMC_VERSION}.tar.gz | tar -xzC .
          && mv HepMC* hepmc_src
          && mkdir hepmc_build && cd hepmc_build
          && cmake ../hepmc_src
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_PREFIX_PATH=${INSTALL_DIR}
          -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
          -DHEPMC3_ENABLE_PYTHON=OFF
          && make -j2
          && make install
          && tar czf ../hepmc3.tar.gz -C ${INSTALL_DIR} .

      - uses: actions/upload-artifact@v1
        with:
          name: hepmc3
          path: hepmc3.tar.gz

  build_heppdt:
    runs-on: macos-10.15
    steps:
      - run: sudo mkdir ${INSTALL_DIR} && sudo chown $USER ${INSTALL_DIR}
      - name: Build HepPDT
        run: >
          curl -SL http://lcgapp.cern.ch/project/simu/HepPDT/download/HepPDT-${HEPPDT_VERSION}.tar.gz | tar -xzC .
          && mv HepPDT* heppdt_src
          && cd heppdt_src
          && ./configure --prefix=${INSTALL_DIR}
          && make -j2
          && make install
          && tar czf ../heppdt.tar.gz -C ${INSTALL_DIR} .

      - uses: actions/upload-artifact@v1
        with:
          name: heppdt
          path: heppdt.tar.gz

  build_pythia8:
    runs-on: macos-10.15
    steps:
      - run: sudo mkdir ${INSTALL_DIR} && sudo chown $USER ${INSTALL_DIR}
      - name: Build
        run: >
          curl -SL http://home.thep.lu.se/~torbjorn/pythia8/pythia8${PYTHIA8_VERSION}.tgz | tar -xzC .
          && mv pythia8244 pythia8_src
          && cd pythia8_src
          && ./configure --prefix=${INSTALL_DIR}
          && make -j2
          && make install
          && tar czf ../pythia8.tar.gz -C ${INSTALL_DIR} .

      - uses: actions/upload-artifact@v1
        with:
          name: pythia8
          path: pythia8.tar.gz


  make_tarball:
    runs-on: ubuntu-latest # we don't need macOS here
    needs: 
      - build_boost
      - build_tbb
      - build_xercesc
      - build_heppdt
      - build_pythia8
      - build_root
      - build_geant4
      - build_hepmc3
      - build_dd4hep
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: boost
          path: .
      - uses: actions/download-artifact@v1
        with:
          name: tbb
          path: .
      - uses: actions/download-artifact@v1
        with:
          name: xercesc
          path: .
      - uses: actions/download-artifact@v1
        with:
          name: heppdt
          path: .
      - uses: actions/download-artifact@v1
        with:
          name: pythia8
          path: .
      - uses: actions/download-artifact@v1
        with:
          name: root
          path: .
      - uses: actions/download-artifact@v1
        with:
          name: geant4
          path: .
      - uses: actions/download-artifact@v1
        with:
          name: hepmc3
          path: .
      - uses: actions/download-artifact@v1
        with:
          name: dd4hep
          path: .

      - name: Unpack
        run: >
          sudo mkdir ${INSTALL_DIR} && sudo chown $USER ${INSTALL_DIR}
          && tar xf tbb.tar.gz -C ${INSTALL_DIR}
          && tar xf boost.tar.gz -C ${INSTALL_DIR}
          && tar xf xercesc.tar.gz -C ${INSTALL_DIR}
          && tar xf heppdt.tar.gz -C ${INSTALL_DIR}
          && tar xf pythia8.tar.gz -C ${INSTALL_DIR}
          && tar xf root.tar.gz -C ${INSTALL_DIR}
          && tar xf geant4.tar.gz -C ${INSTALL_DIR}
          && tar xf hepmc3.tar.gz -C ${INSTALL_DIR}
          && tar xf dd4hep.tar.gz -C ${INSTALL_DIR}

      - name: Make combined tarball
        run: tar czf deps.tar.gz -C ${INSTALL_DIR} .

      - uses: actions/upload-artifact@v1
        with:
          name: deps
          path: deps.tar.gz

  deploy_to_eos:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest # we don't need macOS here
    needs:
      - make_tarball
    env: 
      DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      DEPLOY_PWD: ${{ secrets.DEPLOY_PWD }}
    steps:

      - uses: actions/checkout@v2

      - name: Install prerequisites
        run: >
          sudo apt-get install -y krb5-user krb5-config

      - uses: actions/download-artifact@v1
        with:
          name: deps
          path: .

      - name: Upload
        run: >
          echo "$DEPLOY_PWD" | kinit $DEPLOY_USER@CERN.CH 2>&1 >/dev/null
          && sha=$(echo $GITHUB_SHA | head -c 7)
          && name=deps.$sha.tar.gz
          && mv deps.tar.gz $name
          && scp -F ssh_config $name $DEPLOY_USER@lxplus.cern.ch:/eos/user/a/atsjenkins/www/ACTS/ci/macOS/
          && ssh -F ssh_config $DEPLOY_USER@lxplus.cern.ch ln -f -s $name /eos/user/a/atsjenkins/www/ACTS/ci/macOS/deps.latest.tar.gz

