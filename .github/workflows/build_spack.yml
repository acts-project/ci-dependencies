name: Spack build

on:
  push:
    tags:
      - '*'
    branches:
      - 'main'
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "5 4 * * *"

jobs:
  build_macos:
    strategy:
      fail-fast: false
      matrix:
        include:

         - os: macos-15
           xcode: "16.2.0"
           compiler: "apple-clang@16.0.0"
           default: true

         - os: macos-15
           xcode: "16.4.0"
           compiler: "apple-clang@17.0.0"
           default: true

         - os: macos-15
           xcode: "26.0.0"
           compiler: "apple-clang@17.0.0"
           default: true

    uses: ./.github/workflows/spack.yml
    with:
      os: ${{ matrix.os }}
      xcode: ${{ matrix.xcode }}
      compiler: ${{ matrix.compiler }}
      default: ${{ matrix.default }}
    secrets: inherit

  # build_container:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #
  #       include:
  #         - image: ghcr.io/acts-project/alma9-base:81
  #           compiler: gcc@14.2.1
  #           compiler_path: "/opt/rh/gcc-toolset-14/root"
  #           os: ubuntu-latest
  #           default: true
  #
  #         - image: ghcr.io/acts-project/ubuntu2404:81
  #           compiler: gcc@13.3.0
  #           os: ubuntu-latest
  #           default: true
  #
  #         - image: ghcr.io/acts-project/ubuntu2404_clang19:81
  #           compiler: llvm@19.1.7
  #           os: ubuntu-latest
  #           default: false
  #
  #         - image: ghcr.io/acts-project/ubuntu2404:81
  #           compiler: gcc@13.3.0
  #           os: ubuntu-24.04-arm
  #           default: false
  #
  #   uses: ./.github/workflows/spack.yml
  #   with:
  #     os: ${{ matrix.os }}
  #     image: ${{ matrix.image }}
  #     compiler: ${{ matrix.compiler }}
  #     compiler_path: ${{ matrix.compiler_path }}
  #     default: ${{ matrix.default }}
  #   secrets: inherit
  #
  # merge_container:
  #   runs-on: ubuntu-latest
  #   needs: [build_container]
  #   if: startsWith(github.ref, 'refs/tags/')
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - name: Install the latest version of uv
  #       uses: astral-sh/setup-uv@v6
  #       with:
  #         version: "latest"
  #
  #     - uses: docker/login-action@v3
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #
  #     - name: Build merged manifest and push to regisrty
  #       env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: |
  #         uv run merge_images.py ${{ github.ref_name }} ".*ubuntu24.04.*gcc.*" --push
