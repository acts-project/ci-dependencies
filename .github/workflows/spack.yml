name: Build dependencies

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      image:
        required: false
        type: string
        default: ""
      xcode:
        required: false
        type: string
        default: "latest-stable"
      publish:
        required: false
        type: boolean
        default: true

jobs:

  build:
    runs-on: "${{ inputs.os }}"
    container:
      image: ${{ inputs.image == 'none' && '' || inputs.image }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Spack
        uses: spack/setup-spack@v2

      - name: Apply spack patch
        working-directory: spack
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          curl https://patch-diff.githubusercontent.com/raw/spack/spack/pull/47370.patch | git am

      - run: |
          spack compiler find
          spack compilers

      - name: Locate OpenGL
        run: ./opengl.sh

      - name: Setup Xcode version
        if: startsWith(inputs.os, 'macos')
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "${{ inputs.xcode }}"

      - name: Remove packages to save disk
        if: startsWith(inputs.os, 'ubuntu') && inputs.image == ''
        run: |
          df -h
          sudo apt-get update
          echo "Listing 25 largest packages"
          dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 25
          echo "Removing large packages"
          sudo apt-get remove -y '^dotnet-.*' || true
          sudo apt-get remove -y '^llvm-.*' || true
          sudo apt-get remove -y '^libllvm-.*' || true
          sudo apt-get remove -y azure-cli || true
          sudo apt-get remove -y google-cloud-cli || true
          sudo apt-get remove -y google-chrome-stable || true
          sudo apt-get remove -y firefox || true
          sudo apt-get remove -y powershell || true
          sudo apt-get remove -y mono-devel || true
          sudo apt-get remove -y '^temurin.*' || true
          sudo apt-get autoremove -y
          sudo apt-get clean
          rm -rf /usr/share/dotnet/
          df -h

      - name: Spack concretize
        run: |
          spack -e . concretize -Uf
          spack -e . find

      - name: Spack build
        run: |
          spack -e . install --no-check-signature

      # - uses: mxschmitt/action-tmate@v3
      #   if: failure()

      - name: Derive base image for the build cache
        run: |
          if [ "${{ inputs.image }}" != "" ]; then
            export BASE_IMAGE="${{ inputs.image }}"
          elif [ "${{ inputs.os }}" == "ubuntu-22.04" ]; then
            export BASE_IMAGE="ubuntu:22.04"
          elif [ "${{ inputs.os }}" == "ubuntu-24.04" ]; then
            export BASE_IMAGE="ubuntu:24.04"
          else
            export BASE_IMAGE="ubuntu:24.04"
          fi
          echo "BASE IMAGE: ${BASE_IMAGE}"
          echo "BASE_IMAGE=${BASE_IMAGE}" >> "$GITHUB_ENV"

      - name: Derive target triplet
        run: |
          echo "TARGET_TRIPLET=$(spack arch --family)" >> "$GITHUB_ENV"

      - name: Copy spack.lock to target-triplet
        run: |
          echo "TARGET_TRIPLET=${TARGET_TRIPLET}" >> "$GITHUB_ENV"
          cp spack.lock "spack-${TARGET_TRIPLET}.lock"

      - name: Upload lock files
        if: inputs.publish
        uses: actions/upload-artifact@v4
        with:
          name: spack-${{ env.TARGET_TRIPLET }}-locks
          path: |
            spack-*.lock
          if-no-files-found: error

      - name: Add lock files to release
        uses: softprops/action-gh-release@v2
        if: inputs.publish && startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            spack-*.lock

      - name: Push packages and update index
        if: (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) && !cancelled()
        env:
          GH_OCI_USER: "${{ github.actor }}"
          GH_OCI_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          ./retry.sh spack -e . buildcache push --base-image ${{ env.BASE_IMAGE }} --unsigned --update-index acts-spack-buildcache
