name: Build dependencies

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      image:
        required: false
        type: string
        default: ""
      xcode:
        required: false
        type: string
        default: "latest-stable"
      compiler:
        required: false
        type: string
        default: ""
      default:
        required: false
        type: boolean
        default: false

jobs:

  build:
    runs-on: "${{ inputs.os }}"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Spack
        uses: spack/setup-spack@v2

      - name: Apply spack patch
        working-directory: spack
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com


      - name: Setup Xcode version
        if: startsWith(inputs.os, 'macos')
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "${{ inputs.xcode }}"

      - name: Run spack build in container
        if: "${{ inputs.image != '' }}"
        run: |
          which spack
          docker run \
            -v"$PWD:/src" \
            -v"$(spack location -r):/spack" \
            -w /src ${{ inputs.image }} ./spack_build.sh /spack

      - name: Run spack build on host
        if: "${{ inputs.image == '' }}"
        run: |
          which spack
          ./spack_build.sh $(spack location -r)

      #
      # - name: List visible compilers
      #   run: |
      #     spack compiler find
      #     spack compilers
      #
      # - name: Locate OpenGL
      #   run: ./opengl.sh
      #
      #
      # - name: Select compiler
      #   if: inputs.compiler != ''
      #   run: |
      #     spack compilers | grep "${{ inputs.compiler }}"
      #     spack -e . config add 'packages:all:require: ["%${{ inputs.compiler }}"]'
      #
      # - name: Spack concretize
      #   run: |
      #     spack -e . concretize -Uf
      #     spack -e . find
      #
      # - name: Lockfile bookkeeping
      #   shell: bash
      #   run: |
      #     arch=$(spack arch --family)
      #     export TARGET_TRIPLET="${arch}_${{ inputs.compiler }}"
      #     echo "TARGET_TRIPLET=${TARGET_TRIPLET}" >> "$GITHUB_ENV"
      #     cp spack.lock "spack_${TARGET_TRIPLET}.lock"
      #     if [[ "${{ inputs.default }}" == "true" ]]; then
      #       # this will be become the default combination for this architecture
      #       cp spack.lock "spack_${arch}.lock"
      #     fi

      # KEEP:
      # - name: Upload lock files
      #   uses: actions/upload-artifact@v4
      #   if: always()
      #   with:
      #     name: spack_${{ env.TARGET_TRIPLET }}-locks
      #     path: |
      #       spack_*.lock
      #     if-no-files-found: error
      #
      # - name: Spack build
      #   run: |
      #     spack -e . install --no-check-signature --show-log-on-error
      #
      # - name: Add lock files to release
      #   uses: softprops/action-gh-release@v2
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: |
      #       spack_*.lock
      #
      # - name: Push packages and update index
      #   if: (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) && !cancelled()
      #   env:
      #     GH_OCI_USER: "${{ github.actor }}"
      #     GH_OCI_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      #   shell: bash
      #   run: |
      #     if [[ "${{ inputs.image }}" != "" ]]; then
      #       export BASE_IMAGE="${{ inputs.image }}"
      #     elif [[ "${{ inputs.os }}" == "ubuntu-22.04" ]]; then
      #       export BASE_IMAGE="ubuntu:22.04"
      #     elif [[ "${{ inputs.os }}" == "ubuntu-24.04" ]]; then
      #       export BASE_IMAGE="ubuntu:24.04"
      #     else
      #       export BASE_IMAGE="ubuntu:24.04"
      #     fi
      #     echo "BASE IMAGE: ${BASE_IMAGE}"
      #     ./retry.sh spack -e . buildcache push --base-image "${BASE_IMAGE}" --unsigned --update-index acts-spack-buildcache
